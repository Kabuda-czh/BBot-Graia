name: Release

on:
  push:
    branches:
      - master
    paths:
      - pyproject.toml

  workflow_dispatch:

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
      version: ${{ steps.get_version.outputs.version }}
    steps:
      - name: Prepare environment
        uses: actions/checkout@v2
      - name: Setup Python
        uses: actions/setup-python@v4
      - name: Get version
        id: get_version
        run: echo "::set-output name=version::$(python release.py --version)"
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.get_version.outputs.version }}
          release_name: v${{ steps.get_version.outputs.version }}
          draft: false
          prerelease: false

  build:
    name: Build
    needs: release
    outputs:
      file: ${{ steps.filename.outputs.file }}
      buildname: ${{ steps.filename.outputs.buildname }}
    strategy:
      matrix:
        os:
          - ubuntu-latest
          - windows-latest

    runs-on: ${{ matrix.os }}
    steps:
      - name: Prepare environment
        uses: actions/checkout@v2

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.9.x"
      
      - name: Install Poetry
        run: pip install poetry

      - name: Install dependencies
        run: poetry install
      
      - name: Install Pyinstaller
        run: poetry run pip install pyinstaller

      - name: Install Playwright Browsers
        env:
          PLAYWRIGHT_BROWSERS_PATH: "0"
        run: poetry run playwright install chromium

      - name: Build Binary
        run: poetry run pyinstaller main.spec

      - name: Get Name
        id: filename
        run: |
          echo "::set-output name=filename::$(python release.py --name)"
          echo "::set-output name=buildname::$(python release.py --buildname)"

      - name: Upload assets
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.release.outputs.upload_url }}
          asset_path: ./dist/${{ steps.filename.outputs.buildname }}
          asset_name: ${{ steps.filename.outputs.filename }}
          asset_content_type: application/octet-stream